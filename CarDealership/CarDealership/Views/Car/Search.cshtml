@using CarDealership.Models.Enums
@model CarDealership.ViewModel.SearchViewModel
@{
    ViewData["Title"] = "Search";
}
<head>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-slider/11.0.2/css/bootstrap-slider.css" integrity="sha512-SZgE3m1he0aEF3tIxxnz/3mXu/u/wlMNxQSnE0Cni9j/O8Gs+TjM9tm1NX34nRQ7GiLwUEzwuE3Wv2FLz2667w==" crossorigin="anonymous" />
</head>
<div class="container">


    <h2>Search Cars</h2>
    <form method="post" asp-action="Search" asp-controller="Car" id="searchForm">
        <div class="col-12 d-flex justify-content-around mb-2">
            <div class="form-group">
                <label asp-for="Condition"></label>
                <select asp-for="Condition" asp-items="Html.GetEnumSelectList<Condition>()" class="form-control">
                    <option value="">Select a condition</option>
                </select>
            </div>
            <div>
                <label asp-for="BrandId"></label>
                <select asp-for="BrandId" asp-items="@(new SelectList(ViewBag.Brands, "BrandId", "Name"))" class="form-control" id="brandDropdown">
                    <option value="">Select a brand</option>
                </select>
            </div>

            <div class="form-group">
                <label asp-for="ModelId"></label>
                <select asp-for="ModelId" class="form-control" id="modelDropdown">
                    <option value="">Select a model</option>
                </select>
            </div>

            <div class="form-group">
                <label asp-for="CarType"></label>
                <select asp-for="CarType" asp-items="Html.GetEnumSelectList<CarType>()" class="form-control">
                    <option value="">Select a car type</option>
                </select>
            </div>

            <div>
                <button type="button" class="btn btn-secondary" id="toggleButton">Show More Options</button>
                <button type="submit" class="btn btn-primary" id="searchButton">Search</button>
            </div>
        </div>

        <div id="additionalFields" style="display: none;">
            <div class="d-flex flex-wrap gap-3 mx-6">
                <div class="form-group">
                    <label asp-for="EngineType"></label>
                    <select asp-for="EngineType" asp-items="Html.GetEnumSelectList<EngineType>()" class="form-control">
                        <option value="">Select an engine type</option>
                    </select>
                </div>

                <div class="form-group">
                    <label asp-for="TransmissionType"></label>
                    <select asp-for="TransmissionType" asp-items="Html.GetEnumSelectList<TransmissionType>()" class="form-control">
                        <option value="">Select a transmission type</option>
                    </select>
                </div>

                <div class="form-group">
                    <label asp-for="CarColorId"></label>
                    <select asp-for="CarColorId" asp-items="@(new SelectList(ViewBag.CarColors, "CarColorId", "Name"))" class="form-control">
                        <option value="">Select a car color</option>
                    </select>
                </div>

                <div class="form-group">
                    <label asp-for="Region"></label>
                    <select asp-for="Region" asp-items="Html.GetEnumSelectList<CarDealership.Models.Enums.Region>()" class="form-control">
                        <option value="">Select a region</option>
                    </select>
                </div>

                <div class="form-group d-flex flex-column justify-content-center col-2">
                    <input asp-for="YearRange" id="yearRangeSlider" class="multi-range" type="text" data-slider-min="1900" data-slider-max="2024" data-slider-step="1" data-slider-value="[1901,2024]" />

                    <div class="d-flex justify-content-between">
                        <span id="minYearLabel" class="slider-label"></span>
                        <span id="maxYearLabel" class="slider-label"></span>
                    </div>
                </div>

                <input asp-for="MinYear" id="MinYear" type="hidden" />
                <input asp-for="MaxYear" id="MaxYear" type="hidden" />


                <div class="form-group">
                    <label asp-for="Mileage"></label>
                    <input asp-for="Mileage" class="form-control" />
                </div>

                <div class="form-group d-flex flex-column justify-content-center col-2">
                    <input asp-for="PriceRange" id="priceRangeSlider" class="multi-range" type="text" data-slider-min="0" data-slider-max="100000" data-slider-step="500" data-slider-value="[0,100000]" />

                    <div class="d-flex justify-content-between">
                        <span id="minPriceLabel" class="slider-label"></span>
                        <span id="maxPriceLabel" class="slider-label"></span>
                    </div>
                </div>

                <input asp-for="MinPrice" id="MinPrice" type="hidden" />
                <input asp-for="MaxPrice" id="MaxPrice" type="hidden" />

                <div class="form-group">
                    <label for="orderBy">Order By</label>
                    <select id="orderBy" name="orderBy" class="form-control">
                        <option value="">Default</option>
                        <option value="PriceAsc">Price Ascending</option>
                        <option value="PriceDesc">Price Descending</option>
                        <option value="MileageAsc">Mileage Ascending</option>
                        <option value="MileageDesc">Mileage Descending</option>
                    </select>
                </div>
            </div>
        </div>
    </form>
    @if (ViewBag.SearchResults != null && ViewBag.SearchResults.Count > 0)
    {
        <h3>Search Results</h3>

        <div class="row">
            @foreach (var car in ViewBag.SearchResults)
            {
                <div class="col-md-4 mb-4 p-2">
                    <div class="card d-flex flex-column">
                        <!-- Car Image -->
                        <a href="@Url.Action("Details", "Car", new { id = car.CarId })">
                            <img src="@((car.Photos.Count > 0) ? car.Photos[0].Url : "placeholder-url.jpg")" class="card-img-top img-fluid" alt="Car Photo" style="height: 250px; object-fit: cover; transition: filter 0.3s;">
                        </a>

                        <div class="card-body">
                            <!-- Car Name -->
                            <h3 class="card-title">@car.Model.Name</h3>

                            <!-- Car Details with Icons -->
                            <div class="card-text d-flex justify-content-between">
                                <h5>@car.Price лв.</h5>
                                <div class="d-flex">
                                    <p class="pe-2">@car.Mileage</p>
                                    <p class="pe-2">@car.EngineType</p>
                                    <p class="pe-2">@car.TransmissionType</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @* <div class="card">
        <img src="@((car.Photos.Count > 0) ? car.Photos[0].Url : "placeholder-url.jpg")" class="card-img-top" alt="Car Photo">
        <div class="card-body">
        <h5 class="card-title">@car.Model.Name</h5>
        <p class="card-text">
        <strong>Brand:</strong> @car.Brand.Name<br>
        <strong>Engine Type:</strong> @car.EngineType<br>
        <strong>Transmission Type:</strong> @car.TransmissionType<br>
        <strong>Car Color:</strong> @car.CarColor.Name<br>
        <strong>Region:</strong> @car.Region<br>
        <strong>Year:</strong> @car.Year<br>
        <strong>Mileage:</strong> @car.Mileage<br>
        <strong>Power:</strong> @car.Power<br>
        <strong>Car Type:</strong> @car.CarType<br>
        <strong>Condition:</strong> @car.Condition<br>
        <strong>Price:</strong> @car.Price
        </p>
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#carGalleryModal-@car.CarId">
        View Photos
        </button>
        </div>
        </div>

        <!-- Modal for Car Gallery -->
        <div class="modal fade" id="carGalleryModal-@car.CarId" tabindex="-1" role="dialog" aria-labelledby="carGalleryModalLabel-@car.CarId" aria-hidden="true">
        <div class="modal-dialog" role="document">
        <div class="modal-content">
        <div class="modal-header">
        <h5 class="modal-title" id="carGalleryModalLabel-@car.CarId">Car Photos</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
        </button>
        </div>
        <div class="modal-body">
        <!-- Display photos in the modal -->
        @foreach (var photo in car.Photos)
        {
        <img src="@photo.Url" alt="Car Photo" class="img-fluid" />
        }
        </div>
        <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        </div>
        </div>
        </div>
        </div> *@
            }
        </div>
        <form asp-action="Search" asp-controller="Car" method="post" id="paginationForm">
            <input type="hidden" name="pageNumber" id="pageNumberInput" value="@(ViewBag.CurrentPage)" />
            <input type="hidden" name="pageSize" value="@(ViewBag.PageSize)" />
            <ul class="pagination">
                <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")"><a class="page-link" href="javascript:void(0);" onclick="changePage(1)">First</a></li>
                <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")"><a class="page-link" href="javascript:void(0);" onclick="changePage(@(ViewBag.CurrentPage - 1))">Previous</a></li>
                <li class="page-item"><span class="page-link">Page @(ViewBag.CurrentPage) of @(ViewBag.TotalPages)</span></li>
                <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")"><a class="page-link" href="javascript:void(0);" onclick="changePage(@(ViewBag.CurrentPage + 1))">Next</a></li>
                <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")"><a class="page-link" href="javascript:void(0);" onclick="changePage(@(ViewBag.TotalPages))">Last</a></li>
            </ul>
        </form>

    }
    else
    {
        <p>No results found.</p>
    }
</div>

<style>
    .card-img-top:hover {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }
</style>
@section scripts {
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script>
        // Function to fetch and populate models based on the selected brand
        function fetchAndPopulateModels(brandId) {
            // Clear existing options in the model dropdown
            $('#modelDropdown').html('<option value="">Select a model</option>');

            if (brandId) {
                // Use Url.Action to generate the correct URL
                var url = '@Url.Action("GetModels", "Car")/' + brandId;

                // Fetch models based on the selected brand
                $.getJSON(url, function (models) {
                    // Populate the model dropdown with fetched models
                    $.each(models, function (index, model) {
                        $('#modelDropdown').append('<option value="' + model.modelId + '">' + model.name + '</option>');
                    });

                    // Set the selected value based on ViewBag.SelectedModelName if not empty
                    var selectedModelName = '@ViewBag.SelectedModelName';
                    console.log(selectedModelName);
                    if (selectedModelName) {
                        // Find the option with the matching text and select it
                        $('#modelDropdown option').filter(function () {
                            return $(this).text() === selectedModelName;
                        }).prop('selected', true);
                    }
                });
            }
        }

        // Execute the script on page load
        $(document).ready(function () {
            var initialBrandId = $('#brandDropdown').val();
            fetchAndPopulateModels(initialBrandId);
        });

        // Handle change event on the brand dropdown
        $(document).on('change', '#brandDropdown', function () {
            var brandId = $(this).val();

            // Call the function to fetch and populate models
            fetchAndPopulateModels(brandId);
        });
    </script>
    <script>
        function changePage(pageNumber) {
            document.getElementById("pageNumberInput").value = pageNumber;
            document.getElementById("paginationForm").submit();
        }
    </script>
    <script>
        $(document).ready(function () {
            // Cache the additionalFields element for better performance
            var $additionalFields = $("#additionalFields");

            // Toggle visibility of additional fields on button click
            $("#toggleButton").click(function () {

                $additionalFields.slideToggle(200, function () {

                    if ($additionalFields.is(":visible")) {
                        $additionalFields.css({
                            display: "block",
                        });
                    }
                });
            });
        });
    </script>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-slider/11.0.2/bootstrap-slider.min.js" integrity="sha512-f0VlzJbcEB6KiW8ZVtL+5HWPDyW1+nJEjguZ5IVnSQkvZbwBt2RfCBY0CBO1PsMAqxxrG4Di6TfsCPP3ZRwKpA==" crossorigin="anonymous"></script>

    <script>
        // Initialize Bootstrap Slider for the price range
        $('#priceRangeSlider').slider({
            tooltip: 'hide'
        }).on('slide', function (ev) {
            var minPrice = ev.value[0];
            var maxPrice = ev.value[1];

            $('#minPriceLabel').text(minPrice);
            $('#maxPriceLabel').text(maxPrice);

            // Set the values to hidden fields or update your form elements
            $('#MinPrice').val(minPrice);
            $('#MaxPrice').val(maxPrice);
        });

        // Function to set initial label values
        function setInitialLabels() {
            var minPrice = $('#priceRangeSlider').data('slider-min');
            var maxPrice = $('#priceRangeSlider').data('slider-max');

            $('#minPriceLabel').text(minPrice);
            $('#maxPriceLabel').text(maxPrice);

            // Set the initial values to hidden fields or update your form elements
            $('#MinPrice').val(minPrice);
            $('#MaxPrice').val(maxPrice);
        }

        // Execute the script on page load
        $(document).ready(function () {
            setInitialLabels();
        });

        // Handle slide event on the priceRangeSlider
        $('#priceRangeSlider').on('slide', function (ev) {
            var minPrice = ev.value[0];
            var maxPrice = ev.value[1];

            $('#minPriceLabel').text(minPrice);
            $('#maxPriceLabel').text(maxPrice);

            // Set the values to hidden fields or update your form elements
            $('#MinPrice').val(minPrice);
            $('#MaxPrice').val(maxPrice);
        });

        $('#searchForm').submit(function () {
            console.log('Submitting form with MinPrice:', $('#MinPrice').val(), 'and MaxPrice:', $('#MaxPrice').val());
        });
    </script>
    <script>
        // Initialize Bootstrap Slider for the year range
        $('#yearRangeSlider').slider({
            tooltip: 'hide'
        }).on('slide', function (ev) {
            var minYear = ev.value[0];
            var maxYear = ev.value[1];

            $('#minYearLabel').text('Min Year: ' + minYear);
            $('#maxYearLabel').text('Max Year: ' + maxYear);

            // Set the values to hidden fields or update your form elements
            $('#MinYear').val(minYear);
            $('#MaxYear').val(maxYear);
        });

        // Function to set initial label values
        function setInitialYearLabels() {
            var minYear = $('#yearRangeSlider').data('slider-min');
            var maxYear = $('#yearRangeSlider').data('slider-max');

            $('#minYearLabel').text('Min Year: ' + minYear);
            $('#maxYearLabel').text('Max Year: ' + maxYear);

            // Set the initial values to hidden fields or update your form elements
            $('#MinYear').val(minYear);
            $('#MaxYear').val(maxYear);
        }

        // Execute the script on page load
        $(document).ready(function () {
            setInitialYearLabels();
        });

        // Handle slide event on the yearRangeSlider
        $('#yearRangeSlider').on('slide', function (ev) {
            var minYear = ev.value[0];
            var maxYear = ev.value[1];

            $('#minYearLabel').text('Min Year: ' + minYear);
            $('#maxYearLabel').text('Max Year: ' + maxYear);

            // Set the values to hidden fields or update your form elements
            $('#MinYear').val(minYear);
            $('#MaxYear').val(maxYear);
        });

        $('#searchForm').submit(function () {
            console.log('Submitting form with MinYear:', $('#MinYear').val(), 'and MaxYear:', $('#MaxYear').val());
        });
    </script>

}
